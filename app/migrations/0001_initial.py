# Generated by Django 5.2.1 on 2025-05-21 10:17

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('registration', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('longdescription', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='full name')),
                ('email', models.EmailField(db_collation='und-x-icu', error_messages={'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('club', models.CharField(max_length=255)),
                ('ul_class', models.CharField(choices=[('A', 'A'), ('B', 'B')], default='B', max_length=1)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('allowed_instructors', models.ManyToManyField(blank=True, limit_choices_to={'is_instructor': True}, related_name='pilots_who_granted_access', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='FlightResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pilot_function', models.CharField(choices=[('Dual', 'Dual'), ('PIC', 'PIC')], max_length=100)),
                ('norm_type', models.CharField(choices=[('lesson', 'lesson'), ('skilltest', 'skilltest'), ('pft', 'pft')], max_length=100)),
                ('departure_airfield', models.CharField(max_length=255)),
                ('arrival_airfield', models.CharField(max_length=255)),
                ('off_blocks', models.DateTimeField()),
                ('on_blocks', models.DateTimeField()),
                ('n_landings', models.IntegerField()),
                ('aircraft', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.aircraft')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='flight_instructor', to=settings.AUTH_USER_MODEL)),
                ('pilot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='flight_pilot', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')])),
                ('comment', models.TextField(blank=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.exercise')),
                ('flight_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.flightresult')),
            ],
        ),
        migrations.CreateModel(
            name='Norm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('longdescription', models.TextField(blank=True)),
                ('ul_class', models.CharField(choices=[('A', 'A'), ('B', 'B')], default='B', max_length=1)),
                ('norm_type', models.CharField(choices=[('lesson', 'lesson'), ('skilltest', 'skilltest'), ('pft', 'pft')], max_length=100)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('title', 'norm_type'), name='unique_norm_title_and_type')],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='norm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='app.norm'),
        ),
    ]
